
machine Counter{
	int counter=0;
	//int max = 10;
	//int min = 0;
	//bool reach = false;
	//int loop=2 && reach;

	start state S0{
		bool visited=false;
		counter==prev(counter)+1;
		(counter>=5) => (visited==true);
	}

	/* 
	 * final state
	 * decrease counter
	 */
	final state S1{
	 	counter=prev(counter)-1; // the same as counter--;
	}

	transition t1 {S0 -> S1 on "counter--" where S0.visited==true && counter>=8;}
	//transition t2 {S1 -> S0 on "counter++"}
	//transition t3 {S0 -> S0 on "counter++"}
	//transition t4 {S1 -> S1 on "counter--"}

	//invariant Safty {counter>=min && counter<=max;} for {S0,S1}
}
